include "collision data.txt"

macro get_tile_info(x,y) {
lda {y}
sep #$20
lda.b {x}+1
asl #2
rep #$20
tax
lda {collision_map},x
}

macro floor_collision(x,bits) {
txa
sep #$20
lda.b {x}+1
asl #2
rep #$20
tax
lda {collision_map},x
and {bits}
beq +
tsb {collision_flags}
lda {bottom_y}
and #$ff00
dec
sta {bottom_y}
+;
}

macro ceiling_collision(x,bits) {
txa
sep #$20
lda.b {x}+1
asl #2
rep #$20
tax
lda {collision_map},x
and {bits}
beq +
tsb {collision_flags}
lda {copy_y}
ora #$00ff
inc
sta {copy_y}
+;
}

macro ceiling_slope_collision(inc,bits) {
sta {temp_x}
get_tile_info({temp_x},{copy_y})
and #$0002
beq +
lda {temp_x}
and #$00f0
lsr #3
adc {slope_map},x
tax
lda {copy_y}
and #$ff00
clc
adc $0020,x
cmp {copy_y}
bcc +
dec
cmp {prev_y}
bcs +
adc #$0002
sta {copy_y}
lda #$0002
tsb {collision_flags}
+;
lda {temp_x}
cmp {center_x}
beq ++
-;
clc
adc #{inc}
sta {temp_x}
get_tile_info({temp_x},{copy_y})
bit #{bits}
beq +
lda {temp_x}
and #$00f0
lsr #3
adc {slope_map},x
tax
lda {copy_y}
and #$ff00
clc
adc $0020,x
cmp {copy_y}
bcc +
tay
lda {copy_y}
and #$fff0
clc
adc #$0010
sta {prev_y}
dey
cpy {prev_y}
bcs +
iny #2
sty {copy_y}
lda #$0002
tsb {collision_flags}
+;
lda {temp_x}
cmp {center_x}
bne -
+;
}

macro slope_collision(inc,bits) {
sta {temp_x}
get_tile_info({temp_x},{bottom_y})
and #$0001
beq +
lda {temp_x}
and #$00f0
lsr #3
adc {slope_map},x
tax
lda {bottom_y}
and #$ff00
clc
adc $0000,x
cmp {bottom_y}
bcs +
cmp {prev_bottom_y}
bcc +
dec
sta {bottom_y}
lda #$0001
tsb {collision_flags}
+;
lda {temp_x}
cmp {center_x}
beq ++
-;
clc
adc #{inc}
sta {temp_x}
get_tile_info({temp_x},{bottom_y})
bit #{bits}
beq +
lda {temp_x}
and #$00f0
lsr #3
adc {slope_map},x
tax
lda {bottom_y}
and #$ff00
clc
adc $0000,x
cmp {bottom_y}
bcs +
tay
lda {bottom_y}
and #$fff0
sec
sbc #$0010
sta {prev_bottom_y}
cpy {prev_bottom_y}
bcc +
dey
sty {bottom_y}
lda #$0001
tsb {collision_flags}
+;
lda {temp_x}
cmp {center_x}
bne -
+;
}

macro calculate_wall_detector_height() {
get_tile_info({center_x},{bottom_y})
and #$0001
beq +
lda {center_x}
and #$00f0
lsr #3
adc {slope_map},x
tax
lda {bottom_y}
and #$ff00
clc
adc $0000,x
cmp {bottom_y}
bcc +
lda {height}
sbc {half_width}
bra ++
+;
lda {height}
+;
clc
adc {copy_y}
sta {temp}
get_tile_info({center_x},{copy_y})
and #$0002
beq +
lda {center_x}
and #$00f0
lsr #3
adc {slope_map},x
tax
lda {copy_y}
and #$ff00
clc
adc $0020,x
cmp {copy_y}
bcs +
lda {copy_y}
adc {half_width}
sta {temp2}
bra ++
+;
lda {copy_y}
sta {temp2}
+;
}

macro right_wall_collision() {
sep #$20
lda.b {right_x}+1
asl #2
rep #$20
tax
lda {collision_map},x
and #$0004
beq +
tsb {collision_flags}
lda {right_x}
and #$ff00
dec
sta {right_x}
+;
}

macro left_wall_collision() {
sep #$20
lda.b {copy_x}+1
asl #2
rep #$20
tax
lda {collision_map},x
and #$0008
beq +
tsb {collision_flags}
lda {copy_x}
ora #$00ff
inc
sta {copy_x}
+;
}

//////////////////////////////////////////////////////////////////////

tile_collision:
lda {y_pos},x
sta {copy_y}
lda {x_pos},x
sta {copy_x}
lda {collision},x
bit #$0031
beq +
lda {collision_type}
cmp #$0001
bne +
lda {copy_y}
clc
adc #$0080
sta {copy_y}
+;
lda {collision},x
bit #$00c2
beq +
lda {collision_type}
cmp #$0002
bne +
lda {copy_y}
sec
sbc #$0080
sta {copy_y}
+;
stx {temp3}
stz {collision_flags}

/////////////////////////////////////////////////

vertical_collision:
lda {width}
lsr
sta {half_width}
clc
adc {prev_x}
sta {prev_center_x}
clc
adc {half_width}
sta {prev_right_x}
lda {prev_y}
cmp {copy_y}
bcc down_collision
eor {copy_y}
and #$ff00
beq no_ceiling_collision
get_tile_info({prev_center_x},{copy_y})
and #$0002
bne no_ceiling_collision
ceiling_collision({prev_x},#$0040)
ceiling_collision({prev_right_x},#$0080)
no_ceiling_collision:
lda {copy_y}
clc
adc {height}
sta {bottom_y}
lda {prev_y}
clc
adc {height}
sta {prev_bottom_y}
jmp horizontal_collision

down_collision:
adc {height}
sta {prev_bottom_y}
lda {copy_y}
clc
adc {height}
sta {bottom_y}
eor {prev_bottom_y}
and #$ff00
beq no_floor_collision
get_tile_info({prev_center_x},{bottom_y})
and #$0001
bne no_floor_collision
floor_collision({prev_x},#$0010)
floor_collision({prev_right_x},#$0020)
lda {bottom_y}
sec
sbc {height}
sta {copy_y}
+;
no_floor_collision:

////////////////////////////////

horizontal_collision:
lda {copy_x}
clc
adc {width}
sta {right_x}
lda {copy_x}
clc
adc {half_width}
and #$fff0
sta {center_x}
lda {prev_x}
clc
adc {half_width}
and #$fff0
sta {temp}
cmp {center_x}
bcc right_collision
jmp left_collision
right_collision:
ceiling_slope_collision($0010,$0200)
lda {copy_y}
clc
adc {height}
sta {bottom_y}
lda {temp}
slope_collision($0010,$0200)
lda {bottom_y}
sec
sbc {height}
sta {copy_y}
lda {right_x}
eor {prev_right_x}
and #$ff00
bne +
jmp exit_collision
+;
calculate_wall_detector_height()
lda {temp2}
right_wall_collision()
lda {temp}
right_wall_collision()
lda {right_x}
sec
sbc {width}
sta {copy_x}
exit_collision:
ldx {temp3}
lda {collision_flags}
sta {collision},x
beq +
lda {copy_x}
sta {x_pos},x
lda {copy_y}
sta {y_pos},x
+;
rts

//////////////////////////////////////////////

left_collision:
ceiling_slope_collision($fff0,$0100)
lda {copy_y}
clc
adc {height}
sta {bottom_y}
lda {temp}
slope_collision($fff0,$0100)
lda {bottom_y}
sec
sbc {height}
sta {copy_y}
lda {copy_x}
eor {prev_x}
and #$ff00
bne +
jmp exit_collision
+;
calculate_wall_detector_height()
lda {temp2}
left_wall_collision()
lda {temp}
left_wall_collision()
jmp exit_collision